package com.aspectsecurity.contrast.contrastjenkins;

import com.aspectsecurity.contrast.contrastjenkins.plots.SeverityFrequencyPlot;
import com.aspectsecurity.contrast.contrastjenkins.plots.VulnerabilityFrequencyPlot;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.model.Action;
import hudson.util.Graph;

import java.util.List;

public class VulnerabilityTrendProjectAction implements Action {

    private AbstractProject<?, ?> project;

    public VulnerabilityTrendProjectAction(final AbstractProject<?, ?> project) {
        this.project = project;
    }

    @Override
    public String getIconFileName() {
        return null;
    }

    @Override
    public String getDisplayName() {
        return null;
    }

    @Override
    public String getUrlName() {
        return "vulnTrendCharts";
    }

    public AbstractProject<?, ?> getProject() {
        return this.project;
    }

    // used in floatingBox.jelly
    public Graph getVulnerabilityGraph() {
        return new VulnerabilityFrequencyPlot(project);
    }

    // used in floatingBox.jelly
    public Graph getSeverityGraph() {
        return new SeverityFrequencyPlot(project);
    }

    public String getProjectName() {
        return this.project.getName();
    }

    // used to hide charts
    public boolean getHasBuilds() {
        return !project.getBuilds().isEmpty();
    }

    public String getBuildResult() {
        List<? extends AbstractBuild<?, ?>> builds = project.getBuilds();
        StringBuilder buildResult = new StringBuilder();

        final Class<VulnerabilityFrequencyAction> buildClass = VulnerabilityFrequencyAction.class;

        for (AbstractBuild<?, ?> currentBuild : builds) {
            buildResult.append(currentBuild.getAction(buildClass).toString());
        }

        return buildResult.toString();
    }
}